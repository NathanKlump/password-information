import org.apache.tools.ant.filters.ReplaceTokens

plugins {
  id 'java'
  id 'maven-publish'

  id 'com.diffplug.spotless' version '5.7.0'
  id 'com.github.node-gradle.node' version '2.0.0'
  id 'org.springframework.boot' version '2.2.6.RELEASE'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'
  id 'org.owasp.dependencycheck' version '5.3.0'
}

node {
  // Version of node to use.
  version = '16.17.0'

  // Base URL for fetching node distributions (change if you have a mirror)
  distBaseUrl = 'https://nodejs.org/dist'

  // If true, it will download node using above parameters
  download  = true

  // Set the work directory where node_modules should be located
  workDir = file("${project.buildDir}/nodejs")

  // set the work directory for Yarn
  npmWorkDir = file("${project.buildDir}/npm")

  nodeModulesDir = file("src/main/react")
}

group = 'edu.oakland'
version = '5.0.1'
description = 'password'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  maven {
    url "https://maven.oakland.edu/repository/public"
    name "nexus"
    credentials {
      username "$mavenUser"
      password "$mavenPassword"
    }
  }
  mavenLocal()
  mavenCentral()
}

if (project.hasProperty('local')) {
  apply from: rootProject.file('gradle/profile_local.gradle');
  println 'Using profile: "local"'
} else {
  println 'Using profile: "default"'
}

spotless {
  java {
    googleJavaFormat()
    importOrder "edu", "java", "com org", ""
    removeUnusedImports()
    trimTrailingWhitespace()
  }
}

task runBuild(type: NpmTask) {
  args = ['run', 'build']
}

task copyTask(type: Copy) {
  from 'src/main/react/build/static'
  into 'src/main/resources/static'
}

clean.finalizedBy 'npm_install'
npm_install.finalizedBy 'runBuild'
runBuild.finalizedBy 'copyTask'
copyTask.finalizedBy 'spotlessApply'

test {
  useJUnitPlatform()
}

dependencies {
  implementation 'org.jasig.portal:uPortal-soffit-renderer:5.6.0'
  implementation 'org.springframework.boot:spring-boot-starter-data-rest'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-jdbc'
  compileOnly 'org.projectlombok:lombok'
  implementation 'org.apache.pdfbox:pdfbox:2.0.20'
  annotationProcessor 'org.projectlombok:lombok'
  runtimeOnly 'com.oracle:ojdbc8:12.2.0.1.0'

  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-validation';
  implementation 'org.springframework.security:spring-security-cas'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation "org.springframework.security:spring-security-ldap"
  implementation 'com.google.code.gson:gson:2.8.2'
  implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
  implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

  implementation 'org.jasypt:jasypt:1.9.3'
  implementation 'com.auth0:java-jwt:3.4.1'

  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
}