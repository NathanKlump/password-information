package edu.oakland.passwordInformation.dao;

public class Constants {

  public static final String GET_PREF_FIRST_NAME =
      new String(
              " SELECT                                                 "
                  + "     BANINST1.GWKGBIO.F_GET_PREF_FIRST_NAME(?)    "
                  + " FROM                                             "
                  + "     dual                                         ")
          .replaceAll("\\s+", " ");

  public static final String GET_DEGREES =
      "SELECT                                                                                                                                                              "
          + "   DISTINCT COALESCE(degree_status,                                                                                                                           "
          + "   lead(degree_status) OVER (                                                                                                                                 "
          + "   ORDER BY rownum)) degree_status,                                                                                                                           "
          + "   COALESCE(class_standing,                                                                                                                                   "
          + "   lag(class_standing) OVER (                                                                                                                                 "
          + "   ORDER BY rownum)) class_standing,                                                                                                                          "
          + "   primary_college,                                                                                                                                           "
          + "   primary_degree,                                                                                                                                            "
          + "   primary_level,                                                                                                                                             "
          + "   primary_major,                                                                                                                                             "
          + "   secondary_major,                                                                                                                                           "
          + "   primary_minor,                                                                                                                                             "
          + "   secondary_minor,                                                                                                                                           "
          + "   primary_concentration_1,                                                                                                                                   "
          + "   secondary_concentration_1,                                                                                                                                 "
          + "   tertiary_concentration_1,                                                                                                                                  "
          + "   primary_concentration_2,                                                                                                                                   "
          + "   secondary_concentration_2,                                                                                                                                 "
          + "   tertiary_concentration_2                                                                                                                                   "
          + "FROM                                                                                                                                                          "
          + "   (                                                                                                                                                          "
          + " SELECT                                                                                                                                                       "
          + "       null AS degree_status,                                                                                                                                 "
          + "       BANINST1.F_STUDENT_GET_DESC('STVCLAS', (F_CLASS_CALC_FNC(:pidm, sgbstdn_levl_code, souf_get_curr_fut_termcode(SYSDATE))), 30) class_standing,          "
          + "       BANINST1.F_GET_DESC_FNC('STVCOLL', sgbstdn_a.SGBSTDN_COLL_CODE_1, 30) primary_college,                                                                 "
          + "       BANINST1.F_GET_DESC_FNC('STVDEGC', sgbstdn_a.SGBSTDN_DEGC_CODE_1, 30) primary_degree,                                                                  "
          + "       BANINST1.F_GET_DESC_FNC('STVLEVL', sgbstdn_a.SGBSTDN_LEVL_CODE, 30) primary_level,                                                                     "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_MAJR_CODE_1, 30) primary_major,                                                                   "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_MAJR_CODE_1_2, 30) secondary_major,                                                               "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_MAJR_CODE_MINR_1, 30) primary_minor,                                                              "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_MAJR_CODE_MINR_1_2, 30) secondary_minor,                                                          "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_majr_code_conc_1, 30) primary_concentration_1,                                                    "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_majr_code_conc_1_2, 30) secondary_concentration_1,                                                "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_majr_code_conc_1_3, 30) tertiary_concentration_1,                                                 "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_majr_code_conc_121, 30) primary_concentration_2,                                                  "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_majr_code_conc_122, 30) secondary_concentration_2,                                                "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_majr_code_conc_123, 30) tertiary_concentration_2,                                                 "
          + "       NULL AS activity_date                                                                                                                                  "
          + "  FROM                                                                                                                                                        "
          + "       saturn.SGBSTDN sgbstdn_a,                                                                                                                              "
          + "       SATURN.STVDEGS stvdegs                                                                                                                                 "
          + "  WHERE                                                                                                                                                       "
          + "       sgbstdn_a.SGBSTDN_PIDM = :pidm                                                                                                                         "
          + "       AND sgbstdn_a.sgbstdn_term_code_eff = (                                                                                                                "
          + "       SELECT                                                                                                                                                 "
          + "           MAX(sgbstdn_b.sgbstdn_term_code_eff)                                                                                                               "
          + "       FROM                                                                                                                                                   "
          + "           saturn.sgbstdn sgbstdn_b                                                                                                                           "
          + "       WHERE                                                                                                                                                  "
          + "           sgbstdn_a.sgbstdn_pidm = sgbstdn_b.sgbstdn_pidm                                                                                                    "
          + "           AND sgbstdn_b.sgbstdn_term_code_eff <= souf_get_curr_fut_termcode(SYSDATE))                                                                        "
          + " UNION                                                                                                                                                        "
          + "  SELECT                                                                                                                                                      "
          + "       NULL AS degree_status,                                                                                                                                 "
          + "       BANINST1.F_STUDENT_GET_DESC('STVCLAS', (F_CLASS_CALC_FNC(:pidm, sgbstdn_levl_code_2, souf_get_curr_fut_termcode(SYSDATE))), 30) class_standing,        "
          + "       BANINST1.F_GET_DESC_FNC('STVCOLL', sgbstdn_a.SGBSTDN_COLL_CODE_2, 30) primary_college,                                                                 "
          + "       BANINST1.F_GET_DESC_FNC('STVDEGC', sgbstdn_a.SGBSTDN_DEGC_CODE_2, 30) primary_degree,                                                                  "
          + "       BANINST1.F_GET_DESC_FNC('STVLEVL', sgbstdn_a.SGBSTDN_LEVL_CODE_2, 30) primary_level,                                                                   "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_MAJR_CODE_2, 30) primary_major,                                                                   "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_MAJR_CODE_2_2, 30) secondary_major,                                                               "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_MAJR_CODE_MINR_2, 30) primary_minor,                                                              "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_MAJR_CODE_MINR_2_2, 30) secondary_minor,                                                          "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_majr_code_conc_2, 30) primary_concentration_1,                                                    "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_majr_code_conc_2_2, 30) secondary_concentration_1,                                                "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_majr_code_conc_2_3, 30) tertiary_concentration_1,                                                 "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_majr_code_conc_221, 30) primary_concentration_2,                                                  "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_majr_code_conc_222, 30) secondary_concentration_2,                                                "
          + "       BANINST1.F_GET_DESC_FNC('STVMAJR', sgbstdn_a.SGBSTDN_majr_code_conc_223, 30) tertiary_concentration_2,                                                 "
          + "       NULL AS activity_date                                                                                                                                  "
          + "  FROM                                                                                                                                                        "
          + "       saturn.SGBSTDN sgbstdn_a,                                                                                                                              "
          + "       SATURN.STVDEGS stvdegs                                                                                                                                 "
          + "  WHERE                                                                                                                                                       "
          + "       sgbstdn_a.SGBSTDN_PIDM = :pidm                                                                                                                         "
          + "       AND sgbstdn_a.sgbstdn_stst_code = 'AS'                                                                                                                 "
          + "       AND sgbstdn_a.SGBSTDN_COLL_CODE_2 IS NOT NULL                                                                                                          "
          + "       AND sgbstdn_a.sgbstdn_term_code_eff = (                                                                                                                "
          + "       SELECT                                                                                                                                                 "
          + "           MAX(sgbstdn_b.sgbstdn_term_code_eff)                                                                                                               "
          + "       FROM                                                                                                                                                   "
          + "           saturn.sgbstdn sgbstdn_b                                                                                                                           "
          + "       WHERE                                                                                                                                                  "
          + "           sgbstdn_a.sgbstdn_pidm = sgbstdn_b.sgbstdn_pidm                                                                                                    "
          + "           AND sgbstdn_b.sgbstdn_term_code_eff <= souf_get_curr_fut_termcode(SYSDATE))                                                                        "
          + " UNION                                                                                                                                                        "
          + " SELECT                                                                                                                                                       "
          + "     DECODE(stvdegs.STVDEGS_AWARD_STATUS_IND, 'A', 'Graduated', 'P', 'Applied to graduate', 'N/A') AS degree_status,                                          "
          + "     NULL AS class_standing,                                                                                                                                  "
          + "     BANINST1.F_GET_DESC_FNC('STVCOLL', SHRDGMR_COLL_CODE_1, 30) AS primary_college,                                                                          "
          + "     BANINST1.F_GET_DESC_FNC('STVDEGC', SHRDGMR_DEGC_CODE, 30) AS primary_degree,                                                                             "
          + "     BANINST1.F_GET_DESC_FNC('STVLEVL', SHRDGMR_LEVL_CODE, 30) AS primary_level,                                                                              "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_1, 30) AS primary_major,                                                                            "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_1_2, 30) AS secondary_major,                                                                        "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_MINR_1, 30) AS primary_minor,                                                                       "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_MINR_1_2, 30) AS secondary_minor,                                                                   "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_CONC_1, 30) AS primary_concentration_1,                                                             "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_CONC_1_2, 30) AS secondary_concentration_1,                                                         "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_CONC_1_3, 30) AS tertiary_concentration_1,                                                          "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_CONC_121, 30) AS primary_concentration_2,                                                           "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_CONC_122, 30) AS secondary_concentration_2,                                                         "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_CONC_123, 30) AS tertiary_concentration_2,                                                          "
          + "     SHRDGMR_ACTIVITY_DATE AS activity_date                                                                                                                   "
          + " FROM                                                                                                                                                         "
          + "     SATURN.SHRDGMR shrdgmr,                                                                                                                                  "
          + "     SATURN.STVDEGS stvdegs                                                                                                                                   "
          + " WHERE                                                                                                                                                        "
          + "     shrdgmr.SHRDGMR_DEGS_CODE = stvdegs.STVDEGS_CODE                                                                                                         "
          + "     AND shrdgmr.SHRDGMR_PIDM = :pidm                                                                                                                         "
          + " UNION                                                                                                                                                        "
          + " SELECT                                                                                                                                                       "
          + "     DECODE(stvdegs.STVDEGS_AWARD_STATUS_IND, 'A', 'Graduated', 'P', 'Applied to graduate', 'N/A') AS degree_status,                                          "
          + "     NULL AS class_standing,                                                                                                                                  "
          + "     BANINST1.F_GET_DESC_FNC('STVCOLL', SHRDGMR_COLL_CODE_2, 30) AS primary_college,                                                                          "
          + "     BANINST1.F_GET_DESC_FNC('STVDEGC', SHRDGMR_DEGC_CODE, 30) AS primary_degree,                                                                             "
          + "     BANINST1.F_GET_DESC_FNC('STVLEVL', SHRDGMR_LEVL_CODE, 30) AS primary_level,                                                                              "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_2, 30) AS primary_major,                                                                            "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_2_2, 30) AS secondary_major,                                                                        "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_MINR_2, 30) AS primary_minor,                                                                       "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_MINR_2_2, 30) AS secondary_minor,                                                                   "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_CONC_2, 30) AS primary_concentration_1,                                                             "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_CONC_2_2, 30) AS secondary_concentration_1,                                                         "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_CONC_2_3, 30) AS tertiary_concentration_1,                                                          "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_CONC_221, 30) AS primary_concentration_2,                                                           "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_CONC_222, 30) AS secondary_concentration_2,                                                         "
          + "     BANINST1.F_GET_DESC_FNC('STVMAJR', SHRDGMR_MAJR_CODE_CONC_223, 30) AS tertiary_concentration_2,                                                          "
          + "     SHRDGMR_ACTIVITY_DATE AS activity_date                                                                                                                   "
          + " FROM                                                                                                                                                         "
          + "     SATURN.SHRDGMR shrdgmr,                                                                                                                                  "
          + "     SATURN.STVDEGS stvdegs                                                                                                                                   "
          + " WHERE                                                                                                                                                        "
          + "     stvdegs.STVDEGS_CODE = SHRDGMR_DEGS_CODE                                                                                                                 "
          + "     AND shrdgmr.SHRDGMR_PIDM = :pidm                                                                                                                         "
          + "     AND SHRDGMR.SHRDGMR_COLL_CODE_2 IS NOT NULL                                                                                                              "
          + " ORDER BY                                                                                                                                                     "
          + "     activity_date DESC)                                                                                                                                      "
              .replaceAll("\\s+", " ");

  public static final String ADVISER_GET_STUDENT_INFO =
      new String(
              " SELECT                                                                              "
                  + "     NVL(BANINST1.GWKGBIO.F_GET_PREF_FIRST_NAME(:pidm),                        "
                  + "     spriden_first_name) AS pref_first_name,                                   "
                  + "     spriden_first_name || ' ' || spriden_last_name AS cn,                     "
                  + "     NVL(sprtele_phone_area || sprtele_phone_number, 'N/A') AS phonenumber,    "
                  + "     NVL(spraddr_street_line1 || DECODE(spraddr_street_line2, NULL, '', '      "
                  + "     ' || spraddr_street_line2) || DECODE(spraddr_street_line3, NULL,          "
                  + "     '', ' ' || spraddr_street_line3) || ' ' || spraddr_city || ', ' ||        "
                  + "     spraddr_stat_code, 'N/A') AS address,                                     "
                  + "     NVL(goremal_email_address, 'N/A') AS email,                               "
                  + "     spriden_id AS gid                                                         "
                  + " FROM                                                                          "
                  + "     spriden,                                                                  "
                  + "     sprtele v,                                                                "
                  + "     spraddr x,                                                                "
                  + "     goremal                                                                   "
                  + " WHERE                                                                         "
                  + "     spriden_pidm = :pidm                                                      "
                  + "     AND goremal_pidm(+) = spriden_pidm                                        "
                  + "     AND goremal_emal_code = 'OAKU'                                            "
                  + "     AND spriden_change_ind IS NULL                                            "
                  + "     AND v.ROWID(+) = F_get_address_telephone_rowid (spriden_pidm,             "
                  + "     'ENRLADDR',                                                               "
                  + "     'A',                                                                      "
                  + "     SYSDATE,                                                                  "
                  + "     1,                                                                        "
                  + "     'S',                                                                      "
                  + "     NULL)                                                                     "
                  + "     AND x.ROWID(+) = F_get_address_rowid (spriden_pidm,                       "
                  + "     'ENRLADDR',                                                               "
                  + "     'A',                                                                      "
                  + "     SYSDATE,                                                                  "
                  + "     1,                                                                        "
                  + "     'S' ,                                                                     "
                  + "     NULL)                                                                     ")
          .replaceAll("\\s+", " ");
  public static String GET_LASTCHANGE_STRING = new String();

  public static String GET_CURRENT_TERM =
      new String(
              "SELECT                                                           "
                  + "     MIN(stvterm_code) AS term                             "
                  + " FROM                                                      "
                  + "     saturn.stvterm a                                      "
                  + " WHERE                                                     "
                  + "     a.stvterm_end_date >= (                               "
                  + "     SELECT                                                "
                  + "         MAX(b.stvterm_end_date)                           "
                  + "     FROM                                                  "
                  + "         saturn.stvterm b                                  "
                  + "     WHERE                                                 "
                  + "         b.stvterm_start_date <= SYSDATE                   "
                  + "         AND b.stvterm_trmt_code = a.stvterm_trmt_code)    "
                  + "     AND a.stvterm_trmt_code = (                           "
                  + "     SELECT                                                "
                  + "         c.stvterm_trmt_code                               "
                  + "     FROM                                                  "
                  + "         saturn.sgbstdn a,                                 "
                  + "         stvterm c                                         "
                  + "     WHERE                                                 "
                  + "         a.sgbstdn_pidm = :pidm                            "
                  + "         AND a.sgbstdn_term_code_eff = c.stvterm_code      "
                  + "         AND a.sgbstdn_term_code_eff = (                   "
                  + "         SELECT                                            "
                  + "             MAX(b.sgbstdn_term_code_eff)                  "
                  + "         FROM                                              "
                  + "             sgbstdn b                                     "
                  + "         WHERE                                             "
                  + "             b.sgbstdn_pidm = a.sgbstdn_pidm))             ")
          .replaceAll("\\s+", " ");

  public static String GET_MOST_RECENT_TERM =
      new String(
              " SELECT                                                        "
                  + "     MAX(stvterm_code) AS code                           "
                  + " FROM                                                    "
                  + "     saturn.stvterm,                                     "
                  + "     saturn.sfrstcr                                      "
                  + " WHERE                                                   "
                  + "     stvterm.stvterm_code = sfrstcr.sfrstcr_term_code    "
                  + "     AND sfrstcr.sfrstcr_pidm = :pidm                    "
                  + "     AND (sfrstcr.sfrstcr_rsts_code LIKE 'R%'            "
                  + "     OR sfrstcr.sfrstcr_rsts_code = 'AU'                 "
                  + "     OR sfrstcr.sfrstcr_rsts_code = 'WL')                "
                  + "     AND stvterm_start_date <= SYSDATE                   "
                  + " ORDER BY                                                "
                  + "     stvterm_code DESC                                   ")
          .replaceAll("\\s+", " ");

  public static final String GET_ADVISER_STRING =
      new String(
              " SELECT                                                                                                     "
                  + "     /*+ ORDERED */                                                                                   "
                  + "	  SPRIDEN.SPRIDEN_PIDM,                                                                            "
                  + "     SPRIDEN.SPRIDEN_ID,                                                                              "
                  + "     SPRIDEN.SPRIDEN_FIRST_NAME,                                                                      "
                  + "     SPRIDEN.SPRIDEN_LAST_NAME,                                                                       "
                  + "     (                                                                                                "
                  + "     SELECT                                                                                           "
                  + "     CASE                                                                                             "
                  + "             WHEN EXISTS (                                                                            "
                  + " 		      SELECT                                                                                   "
                  + "  			      'X'                                                                                  "
                  + "  			  FROM                                                                                     "
                  + "                 SATURN.Sgradvr A                                                                     "
                  + "   	      WHERE                                                                                    "
                  + "   		      A.Sgradvr_Advr_Code IS NOT NULL                                                      "
                  + "   		      AND A.Sgradvr_Term_Code_Eff = (                                                      "
                  + "   		      SELECT                                                                               "
                  + "   			      MAX(B.Sgradvr_Term_Code_Eff)                                                     "
                  + "   			  FROM                                                                                 "
                  + "   			      SATURN.Sgradvr B                                                                 "
                  + "   		      WHERE                                                                                "
                  + "   			      B.Sgradvr_Pidm = A.Sgradvr_Pidm)                                                 "
                  + "   	      AND A.SGRADVR_PIDM = SPRIDEN.SPRIDEN_PIDM) THEN (                                        "
                  + "             SELECT                                                                                   "
                  + "                 BANINST1.f_format_name(spriden_pidm,                                                 "
                  + "   	          'FL30')                                                                              "
                  + "   		  FROM                                                                                     "
                  + "   	          saturn.spriden spriden3                                                              "
                  + "   	      WHERE                                                                                    "
                  + "                 spriden3.spriden_pidm = (                                                            "
                  + "   		      SELECT                                                                               "
                  + "   		          sgradvr_advr_pidm                                                                "
                  + "   			  FROM                                                                                 "
                  + "   				  sgradvr                                                                          "
                  + "   			  WHERE                                                                                "
                  + "   				  sgradvr_pidm = SPRIDEN.SPRIDEN_PIDM                                              "
                  + "   				  AND sgradvr_term_code_eff = (                                                    "
                  + "   				  SELECT                                                                           "
                  + "   					  MAX(sgradvr_term_code_eff)                                                   "
                  + "   				  FROM                                                                             "
                  + "   					  sgradvr                                                                      "
                  + "   				  WHERE                                                                            "
                  + "   					  sgradvr_pidm = SPRIDEN.SPRIDEN_PIDM)                                         "
                  + "   				  AND sgradvr_prim_ind = 'Y'                                                       "
                  + "   				  AND sgradvr_advr_pidm IS NOT NULL                                                "
                  + "   		          AND ROWNUM = 1)                                                                  "
                  + "   		      AND spriden3.spriden_change_ind IS NULL)                                             "
                  + "   	      WHEN SGBSTDN.SGBSTDN_MAJR_CODE_1 IN ('7600',                                             "
                  + "   	      '7605') THEN 'Bachelor of Integrative Studies'                                           "
                  + "   	      WHEN SGBSTDN.SGBSTDN_MAJR_CODE_1 = '7500' THEN 'First Year Advising Center'              "
                  + "   	      WHEN SGBSTDN.SGBSTDN_COLL_CODE_1 IN ('J1',                                               "
                  + "   	      'EG') THEN 'School of Engineering and Computer Science'                                  "
                  + "   	      WHEN SGBSTDN.SGBSTDN_COLL_CODE_1 = 'NR'                                                  "
                  + "   	      OR SGBSTDN.SGBSTDN_MAJR_CODE_1 = '7501' THEN 'School of Nursing'                         "
                  + "   	      WHEN SGBSTDN.SGBSTDN_COLL_CODE_1 = 'HS' THEN 'School of Health Sciences'                 "
                  + "   	      WHEN SGBSTDN.SGBSTDN_COLL_CODE_1 = 'ED' THEN 'School of Education and Human Services'    "
                  + "   	      WHEN SGBSTDN.SGBSTDN_COLL_CODE_1 = 'BA' THEN 'School of Business Administration'         "
                  + "   	      WHEN SGBSTDN.SGBSTDN_COLL_CODE_1 = 'AS' THEN 'College of Arts and Sciences'              "
                  + "   	      ELSE 'NONE'                                                                              "
                  + "	  END AS Adviser                                                                                   "
                  + "	  FROM                                                                                             "
                  + "         dual) Adviser,                                                                               "
                  + "     (                                                                                                "
                  + "	  SELECT                                                                                           "
                  + "	  CASE                                                                                             "
                  + "		      WHEN EXISTS (                                                                            "
                  + "			  SELECT                                                                                   "
                  + "			      'X'                                                                                  "
                  + "			  FROM                                                                                     "
                  + "			      SATURN.Sgradvr A                                                                     "
                  + "			  WHERE                                                                                    "
                  + "			      A.Sgradvr_Advr_Code = 'SHS'                                                          "
                  + "			      AND A.Sgradvr_Term_Code_Eff = (                                                      "
                  + "			      SELECT                                                                               "
                  + "			          MAX(B.Sgradvr_Term_Code_Eff)                                                     "
                  + "			      FROM                                                                                 "
                  + "			          SATURN.Sgradvr B                                                                 "
                  + "			      WHERE                                                                                "
                  + "			          B.Sgradvr_Pidm = A.Sgradvr_Pidm)                                                 "
                  + "			      AND A.SGRADVR_PIDM = SPRIDEN.SPRIDEN_PIDM) THEN 'shs@oakland.edu'                    "
                  + "			  WHEN EXISTS (                                                                            "
                  + "			  SELECT                                                                                   "
                  + "			      'X'                                                                                  "
                  + "			  FROM                                                                                     "
                  + "			      SATURN.Sgradvr A                                                                     "
                  + "			  WHERE                                                                                    "
                  + "			      A.Sgradvr_Advr_Code IS NOT NULL                                                      "
                  + "		          AND A.Sgradvr_Term_Code_Eff = (                                                      "
                  + "			      SELECT                                                                               "
                  + "			          MAX(B.Sgradvr_Term_Code_Eff)                                                     "
                  + "	              FROM                                                                                 "
                  + "			          SATURN.Sgradvr B                                                                 "
                  + "			      WHERE                                                                                "
                  + "			          B.Sgradvr_Pidm = A.Sgradvr_Pidm)                                                 "
                  + "			      AND A.SGRADVR_PIDM = SPRIDEN.SPRIDEN_PIDM) THEN (                                    "
                  + "		      SELECT                                                                                   "
                  + "			      goremal.goremal_email_address                                                        "
                  + "		      FROM                                                                                     "
                  + "		   	      SATURN.Sgradvr A,                                                                    "
                  + "			      GENERAL.GOREMAL                                                                      "
                  + "		      WHERE                                                                                    "
                  + "				  A.Sgradvr_Advr_Code IS NOT NULL                                                      "
                  + "				  AND A.Sgradvr_Term_Code_Eff = (                                                      "
                  + "			      SELECT                                                                               "
                  + "			          MAX(B.Sgradvr_Term_Code_Eff)                                                     "
                  + "				  FROM                                                                                 "
                  + "				      SATURN.Sgradvr B                                                                 "
                  + "				  WHERE                                                                                "
                  + "				      B.Sgradvr_Pidm = A.Sgradvr_Pidm)                                                 "
                  + "			      AND A.SGRADVR_PIDM = SPRIDEN.SPRIDEN_PIDM                                            "
                  + "			      AND GOREMAL.GOREMAL_PIDM = A.Sgradvr_Advr_pidm                                       "
                  + "			      AND GOREMAL.GOREMAL_EMAL_CODE = 'OAKU'                                               "
                  + "			      AND A.sgradvr_prim_ind = 'Y'                                                         "
                  + "			      AND ROWNUM = 1)                                                                      "
                  + "		      WHEN SGBSTDN.SGBSTDN_COLL_CODE_1 IN ('J1',                                               "
                  + "		      'EG') THEN 'secsadvising@oakland.edu'                                                    "
                  + "		      WHEN SGBSTDN.SGBSTDN_COLL_CODE_1 = 'NR'                                                  "
                  + "		      OR SGBSTDN.SGBSTDN_MAJR_CODE_1 = '7501' THEN 'nrsinfo@oakland.edu'                       "
                  + "		      WHEN SGBSTDN.SGBSTDN_COLL_CODE_1 = 'HS' THEN 'shs@oakland.edu'                           "
                  + "		      WHEN SGBSTDN.SGBSTDN_COLL_CODE_1 = 'ED' THEN 'edadvise@oakland.edu'                      "
                  + "		      WHEN SGBSTDN.SGBSTDN_COLL_CODE_1 = 'BA' THEN 'sbaug@oakland.edu'                         "
                  + "		      WHEN SGBSTDN.SGBSTDN_COLL_CODE_1 = 'AS' THEN 'casadv@oakland.edu'                        "
                  + "		      WHEN SGBSTDN.SGBSTDN_MAJR_CODE_1 IN ('7600',                                             "
                  + "		      '7605') THEN 'bis@oakland.edu'                                                           "
                  + "		      WHEN SGBSTDN.SGBSTDN_MAJR_CODE_1 = '7500' THEN 'fyac@oakland.edu'                        "
                  + "		      ELSE SGBSTDN.SGBSTDN_COLL_CODE_1                                                         "
                  + "	  END AS SupportArea                                                                               "
                  + "	  FROM                                                                                             "
                  + "	      dual) AdviserEmail,                                                                          "
                  + "     SGBSTDN.SGBSTDN_COLL_CODE_1,                                                                     "
                  + "     SGBSTDN.SGBSTDN_MAJR_CODE_1,                                                                     "
                  + "     SGBSTDN.SGBSTDN_LEVL_CODE,                                                                       "
                  + "     SGBSTDN.SGBSTDN_STYP_CODE,                                                                       "
                  + "     SGBSTDN.SGBSTDN_TERM_CODE_ADMIT                                                                  "
                  + " FROM                                                                                                 "
                  + "	  SATURN.SGBSTDN SGBSTDN,                                                                          "
                  + "	  SATURN.SPRIDEN SPRIDEN                                                                           "
                  + " WHERE                                                                                                "
                  + "	  SPRIDEN.SPRIDEN_PIDM = SGBSTDN.SGBSTDN_PIDM                                                      "
                  + "	  AND SPRIDEN.SPRIDEN_CHANGE_IND IS NULL                                                           "
                  + "	  AND SGBSTDN.SGBSTDN_TERM_CODE_EFF = (                                                            "
                  + "	  SELECT                                                                                           "
                  + "		  MAX(SGBSTDN2.SGBSTDN_TERM_CODE_EFF)                                                          "
                  + "	  FROM                                                                                             "
                  + "		  SATURN.SGBSTDN SGBSTDN2                                                                      "
                  + "	  WHERE                                                                                            "
                  + "		  SGBSTDN2.SGBSTDN_PIDM = SGBSTDN.SGBSTDN_PIDM)                                                "
                  + "	  AND baninst1.f_registered_this_term(SPRIDEN.SPRIDEN_PIDM,                                        "
                  + "	  :Main_EB_EnterTerm) = 'Y'                                                                        "
                  + "	  AND SGBSTDN.SGBSTDN_PIDM = :pidm                                                                 "
                  + "	  AND SGBSTDN.SGBSTDN_LEVL_CODE = 'UG'                                                             "
                  + "	  AND SGBSTDN.SGBSTDN_STYP_CODE IN ('F',                                                           "
                  + "	  'T',                                                                                             "
                  + "	  '6',                                                                                             "
                  + "	  '2')                                                                                             ")
          .replaceAll("\\s+", " ");
}
